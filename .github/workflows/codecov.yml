name: Codecov

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ubuntu-latest
        python-version: ['3.9']
        torch-version: [1.10.1]
        include:
          - torch-version: 1.12.0
            torchvision-version: 0.11.2
            torchaudio-version: 0.10.1

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install PyTorch ${{ matrix.torch-version }}+cpu
      run: |
        pip install numpy typing-extensions dataclasses
        pip install torch==${{ matrix.torch-version}}+cpu torchvision==${{matrix.torchvision-version}}+cpu torchaudio==${{matrix.torchaudio-version}}+cpu -f https://download.pytorch.org/whl/torch_stable.html

    - name: Install application dependencies
      run: |
        pip install torch-scatter torch-sparse torch-cluster torch-spline-conv -f https://data.pyg.org/whl/torch-${{ matrix.torch-version }}+cpu.html
        pip install torch-geometric==2.0.4
        pip install rdkit-pypi===2021.9.4

    - name: Install full version of FS
      run: |
        pip install -e . [test,full]

    - name: Generate coverage report
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
